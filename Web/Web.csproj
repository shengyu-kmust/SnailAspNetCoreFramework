<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <AssemblyName>Web</AssemblyName>
    
    <!--如下是在asp.net core里用spa的配置，-->
    <!--<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>-->
    <!--spa的根目录-->
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>Web.xml</DocumentationFile>
    <NoWarn>1701;1702;1591</NoWarn>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>


  <ItemGroup>
    <!--SPA的配置-->
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="Interceptor\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="Interceptor\**" />
    <EmbeddedResource Remove="Interceptor\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="Interceptor\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <Content Include="ClientApp\dist\**\*" CopyToPublishDirectory="Always" CopyToOutputDirectory="Always" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Service\Service.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="nlog.config">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\views\basic\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.1.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <None Update="deployScripts\linux\SnailWeb.service">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="deployScripts\linux\winPubToLinux.bat">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="Dockerfile">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="deployScripts\windows\serviceCreate.bat">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="deployScripts\windows\serviceRemove.bat">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="deployScripts\windows\serviceStart.bat">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="deployScripts\windows\serviceStop.bat">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="deployScripts\windows\start.bat">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="staticFile\staticFileReadme.md">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <!--SPA的配置，在每次编译前，确保node已经安装，相关的npm包也已经安装-->
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
     <!--Ensure Node.js is installed--> 
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <!--SPA的配置，编译前端界面，并加入到发布文件-->
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
     <!--As part of publishing, ensure the JS resources are freshly built in production mode--> 
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:prod" />

     <!--Include the newly-built files in the publish output--> 
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
  <ProjectExtensions><VisualStudio><UserProperties appsettings_1json__JsonSchema="https://json.schemastore.org/behat" /></VisualStudio></ProjectExtensions>
</Project>
